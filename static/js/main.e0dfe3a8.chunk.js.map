{"version":3,"sources":["assets/fonts/Cyberpunk/Cyberpunk.ttf","assets/fonts/BlenderProBook/BlenderProBook.otf","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","id","title","completed","classNames","TodoList","todos","map","username","getUser","usersFromServer","find","todosWithUser","userId","getId","Math","max","App","useState","setTitle","setUserId","isTitleError","setIsTitleError","isUserError","setIsUserError","setTodos","selectedUser","emptyTitle","trim","onSubmit","event","preventDefault","newTodo","prevState","action","method","type","placeholder","value","onChange","currentTarget","replace","disabled","ReactDOM","render","document","getElementById"],"mappings":"8QAAe,ICAA,I,qCCQFA,EAA8B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACpCC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MAEd,OACE,mBAAGC,UAAU,WAAWC,KAAI,iBAAYF,GAAxC,SACGD,KCHMI,G,MAA8B,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAE1CC,EAIED,EAJFC,GACAC,EAGEF,EAHFE,MACAR,EAEEM,EAFFN,KAHF,EAKIM,EADFG,iBAJF,SAOA,OACE,0BACE,UAASF,EACTJ,UAAWO,IACT,WACA,CAAE,sBAAuBD,IAJ7B,UAOE,oBAAIN,UAAU,kBAAd,SACGK,IAGFR,GACC,cAAC,EAAD,CAAUA,KAAMA,SCtBXW,G,MAA8B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC5C,OACE,yBAAST,UAAU,WAAnB,SACGS,EAAMC,KAAI,SAACP,GAAD,OACT,cAAC,EAAD,CACE,UAASA,EAAKC,GAEdD,KAAMA,GADDA,EAAKC,WCfL,GACb,CACEA,GAAI,EACJN,KAAM,gBACNa,SAAU,OACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,eACNa,SAAU,YACVZ,MAAO,qBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,sBAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,WACVZ,MAAO,6BAET,CACEK,GAAI,EACJN,KAAM,mBACNa,SAAU,SACVZ,MAAO,4BAET,CACEK,GAAI,EACJN,KAAM,uBACNa,SAAU,mBACVZ,MAAO,2BAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,eACVZ,MAAO,0BAET,CACEK,GAAI,EACJN,KAAM,2BACNa,SAAU,gBACVZ,MAAO,wBAET,CACEK,GAAI,EACJN,KAAM,kBACNa,SAAU,WACVZ,MAAO,2BAET,CACEK,GAAI,GACJN,KAAM,qBACNa,SAAU,iBACVZ,MAAO,2BChDLa,EAAU,SAACR,GAGf,OAFkBS,EAAgBC,MAAK,SAAAjB,GAAI,OAAIA,EAAKO,KAAOA,MAEvC,MAGTW,ECjBE,CACb,CACEX,GAAI,EACJC,MAAO,qBACPC,WAAW,EACXU,OAAQ,GAEV,CACEZ,GAAI,GACJC,MAAO,kBACPC,WAAW,EACXU,OAAQ,GAEV,CACEZ,GAAI,EACJC,MAAO,qCACPC,WAAW,EACXU,OAAQ,IDAyCN,KAAI,SAAAP,GAAI,kCACxDA,GADwD,IAE3DN,KAAMe,EAAQT,EAAKa,aAGfC,EAAQ,SAACR,GACb,OAAOS,KAAKC,IAAL,MAAAD,KAAI,YAAQT,EAAMC,KAAI,SAAAP,GAAI,OAAIA,EAAKC,QAAO,GAGtCgB,EAAM,WACjB,MAA0BC,mBAAiB,IAA3C,mBAAOhB,EAAP,KAAciB,EAAd,KACA,EAA4BD,mBAAiB,GAA7C,mBAAOL,EAAP,KAAeO,EAAf,KACA,EAAwCF,oBAAkB,GAA1D,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAsCJ,oBAAkB,GAAxD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,mBAAiBN,GAA3C,mBAAON,EAAP,KAAcmB,EAAd,KAaMC,EAA0B,IAAXb,EACfc,GAAczB,EAAM0B,OA4B1B,OACE,sBAAK/B,UAAU,MAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,aAAd,2BAEA,uBACEA,UAAU,OACVgC,SAjCa,SAACC,GAWpB,GAVAA,EAAMC,iBAEDL,GACHF,GAAe,GAGbG,GACFL,GAAgB,GAGdI,IAAiBC,EAAY,CAC/B,IAAMK,EAAU,CACd9B,QACAC,WAAW,EACXU,SACAnB,KAAMe,EAAQI,GACdZ,GAAIa,EAAMR,IAGZmB,GAAS,SAAAQ,GAAS,4BAAQA,GAAR,CAAmBD,OACrCb,EAAS,IACTC,EAAU,KAYNc,OAAO,aACPC,OAAO,OAJT,UAME,qBAAKtC,UAAU,sBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,wBAAOA,UAAU,cAAjB,UACE,mBAAGA,UAAU,cAAb,mBACA,uBACEA,UAAU,cACVuC,KAAK,OACL,UAAQ,aACRC,YAAY,QACZC,MAAOpC,EACPqC,SA7DU,SAACT,GACzBX,EAASW,EAAMU,cAAcF,MAC1BG,QAAQ,4CAAyB,KACpCnB,GAAgB,MA4DHD,GACI,sBAAMxB,UAAU,QAAhB,qCAGP,wBAAOA,UAAU,cAAjB,UACE,mBAAGA,UAAU,cAAb,kBACA,yBACEA,UAAU,eACVyC,MAAOzB,EACP,UAAQ,aACR0B,SAnES,SAACT,GACxBV,GAAWU,EAAMU,cAAcF,OAC/Bd,GAAe,IA6DH,UAME,wBAAQc,MAAO,EAAGI,UAAQ,EAA1B,2BAEChC,EAAgBH,KAAI,gBACnBN,EADmB,EACnBA,GACAN,EAFmB,EAEnBA,KAFmB,OAInB,wBAAiB2C,MAAOrC,EAAxB,SACGN,GADUM,SAKhBsB,GACI,sBAAM1B,UAAU,QAAhB,0CAKX,wBACEA,UAAU,eACVuC,KAAK,SACL,UAAQ,eAHV,uBAUJ,cAAC,EAAD,CAAU9B,MAAOA,QEpIvBqC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.e0dfe3a8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Cyberpunk.ce09ddf4.ttf\";","export default __webpack_public_path__ + \"static/media/BlenderProBook.4b509de2.otf\";","import { FC } from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ninterface UserInfoProps {\n  user: User;\n}\n\nexport const UserInfo: FC<UserInfoProps> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoInfo.scss';\n\ninterface TodoInfoProps {\n  todo: Todo;\n}\n\nexport const TodoInfo: FC<TodoInfoProps> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed = false,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <UserInfo user={user} />\n      )}\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\nimport './TodoList.scss';\n\ninterface TodoListProps {\n  todos: Todo[];\n}\n\nexport const TodoList: FC<TodoListProps> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => (\n        <TodoInfo\n          data-id={todo.id}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport './assets/fonts/Cyberpunk/Cyberpunk.ttf';\nimport './assets/fonts/BlenderProBook/BlenderProBook.otf';\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nconst getUser = (id: number): User | null => {\n  const foundUser = usersFromServer.find(user => user.id === id);\n\n  return foundUser || null;\n};\n\nexport const todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nconst getId = (todos: Todo[]) => {\n  return Math.max(...todos.map(todo => todo.id)) + 1;\n};\n\nexport const App = () => {\n  const [title, setTitle] = useState<string>('');\n  const [userId, setUserId] = useState<number>(0);\n  const [isTitleError, setIsTitleError] = useState<boolean>(false);\n  const [isUserError, setIsUserError] = useState<boolean>(false);\n  const [todos, setTodos] = useState<Todo[]>(todosWithUser);\n\n  const handleChangeTitle = (event: ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.currentTarget.value\n      .replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, ''));\n    setIsTitleError(false);\n  };\n\n  const handleChangeUser = (event: ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.currentTarget.value);\n    setIsUserError(false);\n  };\n\n  const selectedUser = userId !== 0;\n  const emptyTitle = !title.trim();\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!selectedUser) {\n      setIsUserError(true);\n    }\n\n    if (emptyTitle) {\n      setIsTitleError(true);\n    }\n\n    if (selectedUser && !emptyTitle) {\n      const newTodo = {\n        title,\n        completed: false,\n        userId,\n        user: getUser(userId),\n        id: getId(todos),\n      };\n\n      setTodos(prevState => [...prevState, newTodo]);\n      setTitle('');\n      setUserId(0);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__wrapper\">\n        <h1 className=\"app__title\">Add todo form</h1>\n\n        <form\n          className=\"form\"\n          onSubmit={handleSubmit}\n          action=\"/api/users\"\n          method=\"POST\"\n        >\n          <div className=\"form__field-wrapper\">\n            <div className=\"form__field\">\n              <label className=\"form__label\">\n                <p className=\"form__title\">Title</p>\n                <input\n                  className=\"form__input\"\n                  type=\"text\"\n                  data-cy=\"titleInput\"\n                  placeholder=\"Title\"\n                  value={title}\n                  onChange={handleChangeTitle}\n                />\n                {isTitleError\n                  && <span className=\"error\">Please enter a title</span>}\n              </label>\n\n              <label className=\"form__label\">\n                <p className=\"form__title\">User</p>\n                <select\n                  className=\"form__select\"\n                  value={userId}\n                  data-cy=\"userSelect\"\n                  onChange={handleChangeUser}\n                >\n                  <option value={0} disabled>Choose a user</option>\n\n                  {usersFromServer.map(({\n                    id,\n                    name,\n                  }) => (\n                    <option key={id} value={id}>\n                      {name}\n                    </option>\n                  ))}\n                </select>\n                {isUserError\n                  && <span className=\"error\">Please choose a user</span>}\n              </label>\n            </div>\n          </div>\n\n          <button\n            className=\"form__button\"\n            type=\"submit\"\n            data-cy=\"submitButton\"\n          >\n            Add\n          </button>\n        </form>\n      </div>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}